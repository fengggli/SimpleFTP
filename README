Simple FTP implementation in java
    --program 2 in CSCI 53700, Distributed System in IUPUI

Author:Feng Li
Time: Oct 26, 2016


Description:
    This is a simple implementation of FTP protocol. User authorization, data encryption, checksum verification are included.


Make:
    run 'make' in the package root directory

quick run:
    AFTER MAKE:
    In the server machine:
        chmod +x ./run_server.sh
        ./run_server.shh
    In the client machine
        chmod +x ./run_client.sh
        ./run_client.sh

Notes:
    1. when the client is asked for path, the path will be a relative path from server/. For example if you input data/a1.pdf, the server will transfer data/a1.pdf to client's working directory
    
    2. In my current implementation, after each file transfering, checksum will be calculated and compared with the original checksum, if not correct, client will get a warning
    
    3. To test functionality of checksum, we can create some corruption in file by uncomment the LINE 42 in src/dataTransform.java :
        buf[0] = (byte)!buf[0]
        which will inverse the first byte of each buffer read. 
    
    
the program works in this way:
  0.create socket(control)
  1.authorization
  2.send file path to server
  3.receive reply from server
  4.for each file
      create socket(data)
      transfer file information(length, checksum)
      transfer data(using encrypted stream)
      close socket(data)
      checksum verify
  5. if all files are verified, need more files?
      yes: go to 2
      no: exit

